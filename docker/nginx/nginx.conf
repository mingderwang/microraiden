user user;
worker_processes  4;
pid /tmp/nginx.pid;

error_log  /dev/stderr warn;

events {
	worker_connections  20000;
}


http {
	include	mime.types;
	sendfile on;
	keepalive_timeout  65;

	access_log /dev/stdout;
	error_log /dev/stderr warn;
	log_subrequest on;

	charset UTF-8;
	gzip on;
	gunzip on;
	gzip_static  on;
	gzip_vary on;
	gzip_types text/plain text/css application/x-javascript text/xml
		application/xml text/javascript application/javascript
		application/json;
	gzip_proxied any;
	client_max_body_size 32M;

	server {
		listen 80;
		server_name demo.log4analytics.com;

		location '/.well-known/acme-challenge' {
			default_type "text/plain";
			root        /tmp/letsencrypt;
		}

		location / {
			return 301 https://$host$request_uri;
		}
	}

	server {
		listen 443 ssl;
		server_name demo.log4analytics.com;

		ssl_certificate /etc/letsencrypt/live/demo.log4analytics.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/demo.log4analytics.com/privkey.pem;
		ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers         HIGH:!aNULL:!MD5;

		location /js/ {
			root /app/web/ ;
		}

		location /static/ {
			root /app/landing/ ;
		}

		location = / {
			root /app/landing ;
			try_files $uri index.html /index.html =404;
		}

		location /wiki {
			return 301 https://wikidemo.log4analytics.com$uri;
		}

		location / {
			try_files $uri$args @app;
		}

		location @app {
			proxy_pass http://demo:9000 ;
		}
	}

	server {
		listen 80;
		server_name wikidemo.log4analytics.com;

		location '/.well-known/acme-challenge' {
			default_type "text/plain";
			root        /tmp/letsencrypt;
		}

		location / {
			return 301 https://$host$request_uri;
		}
	}

	server {
		listen 443 ssl;
		server_name wikidemo.log4analytics.com;

		ssl_certificate /etc/letsencrypt/live/demo.log4analytics.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/demo.log4analytics.com/privkey.pem;
		ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers         HIGH:!aNULL:!MD5;

		location /js/ {
			root /app/web/ ;
		}

		location ~ ^/(wiki|api)/ {
			try_files $uri @app;
		}

		location / {
			proxy_pass https://en.wikipedia.org ;
		}

		location @app {
			proxy_pass http://wikidemo:9000 ;
		}
	}
}
